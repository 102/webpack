// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConfigTestCases css css-import exported tests should compile 1`] = `
Array [
  "body {
	externally-imported: true;
}

body {
	externally-imported1: true;
}

body {
	externally-imported2: true;
}

body {
	background: black;
}

body {
	background: black;
}

@layer default {
	body {
		background: black;
	}
}

@layer default {
	body {
		background: black;
	}
}

@supports (display: flex) {
	body {
		background: black;
	}
}

@supports (display: flex) {
	body {
		background: black;
	}
}

@media screen and (min-width: 400px) {
	body {
		background: black;
	}
}

@media screen and (min-width: 400px) {
	body {
		background: black;
	}
}

@layer default {
	@supports (display: flex) {
		body {
			background: black;
		}
	}
}

@layer default {
	@media screen and (min-width: 400px) {
		body {
			background: black;
		}
	}
}

@supports (display: flex) {
	@media screen and (min-width: 400px) {
		body {
			background: black;
		}
	}
}

@layer default {
	@supports (display: flex) {
		@media screen and (min-width: 400px) {
			body {
				background: black;
			}
		}
	}
}

@layer default {
	@supports (display: flex) {
		@media screen and (min-width: 400px) {
			body {
				background: black;
			}
		}
	}
}

@layer default {
	@supports (display: flex) {
		@media screen and (min-width: 400px) {
			body {
				background: black;
			}
		}
	}
}

@layer default {
	@supports (display: flex) {
		@media screen and (min-width: 400px) {
			body {
				background: black;
			}
		}
	}
}

@layer default {
	@supports (background: url(./img.png)) {
		@media screen and (min-width: 400px) {
			body {
				background: black;
			}
		}
	}
}

@layer default {
	@supports (background: url(\\"./img.png\\")) {
		@media screen and (min-width: 400px) {
			body {
				background: black;
			}
		}
	}
}

@media screen {
	body {
		background: black;
	}
}

@media screen {
	body {
		background: black;
	}
}

@media screen {
	body {
		background: black;
	}
}

body {
	background: black;
}

body {
	background: green;
}

@layer base {
	body {
		background: green;
	}
}

@supports (display: flex) {
	body {
		background: green;
	}
}

@media screen, print {
	body {
		background: green;
	}
}

a {
	color: red;
}

a {
	color: red;
}

a {
	color: red;
}

a {
	color: red;
}

a {
	color: red;
}

a {
	color: red;
}

a {
	color: red;
}

a {
	color: red;
}

a {
	color: red;
}

@media screen and (orientation:landscape) {
	a {
		color: red;
	}
}

@media SCREEN AND (ORIENTATION: LANDSCAPE) {
	a {
		color: red;
	}
}

@media (min-width: 100px) {
	a {
		color: red;
	}
}

.class {
	content: \\"style.css\\";
	color: red;
}

.class {
	content: \\"style.css\\";
	color: red;
}

.class {
	content: \\"style.css\\";
	color: red;
}

.class {
	content: \\"style.css\\";
	color: red;
}

.class {
	content: \\"style7.css\\";
}

.class {
	content: \\"style7.css\\";
}

.class {
	content: \\"test test.css\\";
}

.class {
	content: \\"test test.css\\";
}

.class {
	content: \\"test test.css\\";
}

.class {
	content: \\"test test.css\\";
}

.class {
	content: \\"test test.css\\";
}

.class {
	content: \\"test test.css\\";
}

.class {
	content: \\"test.css\\";
}

.class {
	content: \\"test.css\\";
}

.class {
	content: \\"test.css\\";
}

.class {
	content: \\"test.css\\";
}

.class {
	content: \\"test test.css\\";
}

.class {
	content: \\"test test.css\\";
}

.class {
	content: \\"test test.css\\";
}

.class {
	content: \\"test test.css\\";
}

.class {
	content: \\"test test.css\\";
}

.class {
	content: \\"test test.css\\";
}

.class {
	content: \\"style6.css\\";
}

.class {
	content: \\"style4.css\\";
}

.class {
	content: \\"style4.css\\";
}

.class {
	content: \\"style4.css\\";
}

@supports (display: flex) {
	.class {
		content: \\"style4.css\\";
	}
}

@supports (display: flex) {
	@media screen and (orientation:landscape) {
		.class {
			content: \\"style4.css\\";
		}
	}
}

.class {
	content: \\"style4.css\\";
}

.class {
	content: \\"style4.css\\";
}

.class {
	content: \\"style4.css\\";
}

a {
  color: red;
}
@media screen and (orientation:landscape) {
	a {
	  color: blue;
	}}

.class {
	content: \\"style5.css\\";
}

.class {
	content: \\"style5.css\\";
}

@supports (unknown) {
	.class {
		content: \\"style5.css\\";
	}
}

@supports (display: flex) {
	.class {
		content: \\"style5.css\\";
	}
}

@supports (display: flex !important) {
	.class {
		content: \\"style5.css\\";
	}
}

@supports (display: flex) {
	@media screen and (min-width: 400px) {
		.class {
			content: \\"style5.css\\";
		}
	}
}

@supports (selector(a b)) {
	.class {
		content: \\"style5.css\\";
	}
}

@supports (display: flex) {
	.class {
		content: \\"style5.css\\";
	}
}

@layer {
	.class {
		content: \\"layer.css\\";
	}
}

@layer default {
	.class {
		content: \\"layer.css\\";
	}
}

@layer default {
	@supports (display: flex) {
		@media screen and (min-width: 400px) {
			.class {
				content: \\"layer.css\\";
			}
		}
	}
}

@layer {
	@supports (display: flex) {
		@media screen and (min-width: 400px) {
			.class {
				content: \\"layer.css\\";
			}
		}
	}
}

@layer {
	@supports (display: flex) {
		@media screen and (min-width: 400px) {
			.class {
				content: \\"layer.css\\";
			}
		}
	}
}

@layer {
	.class {
		content: \\"layer.css\\";
	}
}

@layer foo.bar.baz {
	.class {
		content: \\"layer.css\\";
	}
}

@layer {
	.class {
		content: \\"layer.css\\";
	}
}

@layer default {
	@supports (display: flex) {
		@media screen and (min-width:400px) {
			.class {
				content: \\"style6.css\\";
			}
		}
	}
}

@layer default {
	@supports (display: flex) {
		@media screen and (min-width:400px) {
			.class {
				content: \\"style6.css\\";
			}
		}
	}
}

@supports (display: flex) {
	@media screen and (min-width:400px) {
		.class {
			content: \\"style6.css\\";
		}
	}
}

@media screen and (min-width:400px) {
	.class {
		content: \\"style6.css\\";
	}
}

@media screen and (min-width:400px) {
	.class {
		content: \\"style6.css\\";
	}
}

@media screen and (min-width:400px) {
	.class {
		content: \\"style6.css\\";
	}
}

@layer default {
	@supports (display     :     flex) {
		@media screen     and     (     min-width     :     400px     ) {
			.class {
				content: \\"style6.css\\";
			}
		}
	}
}

@layer DEFAULT {
	@supports (DISPLAY: FLEX) {
		@media SCREEN AND (MIN-WIDTH: 400PX) {
			.class {
				content: \\"style6.css\\";
			}
		}
	}
}

@layer {
	@supports (DISPLAY: FLEX) {
		@media SCREEN AND (MIN-WIDTH: 400PX) {
			.class {
				content: \\"style6.css\\";
			}
		}
	}
}

@layer /* Comment */default/* Comment */ {
	@supports (/* Comment */display/* Comment */:/* Comment */ flex/* Comment */) {
		@media /* Comment */ screen/* Comment */ and/* Comment */ (/* Comment */min-width/* Comment */: /* Comment */400px/* Comment */) {
			.class {
				content: \\"style6.css\\";
			}
		}
	}
}

.class {
	content: \\"style6.css\\";
}

.class {
	content: \\"style6.css\\";
}

.class {
	content: \\"style6.css\\";
}

.class {
	content: \\"style6.css\\";
}

.class {
	content: \\"style6.css\\";
}

.class {
	content: \\"style6.css\\";
}

@media /* Comment */ print and (orientation:landscape) {
	.class {
		content: \\"style6.css\\";
	}
}

@media /* Comment */print and (orientation:landscape)/* Comment */ {
	.class {
		content: \\"style6.css\\";
	}
}

@media /* Comment */ print and (orientation:landscape) {
	.class {
		content: \\"style6.css\\";
	}
}

@media screen and (min-width: 400px) {
	.class {
		content: \\"style8.css\\";
	}
}

@media (prefers-color-scheme: dark) {
	.class {
		content: \\"style8.css\\";
	}
}

@supports (display: flex) {
	.class {
		content: \\"style8.css\\";
	}
}

@supports (((display: flex))) {
	.class {
		content: \\"style8.css\\";
	}
}

@supports (((display: inline-grid))) {
	@media screen and (((min-width: 400px))) {
		.class {
			content: \\"style8.css\\";
		}
	}
}

@supports (display: grid) {
	.class {
		content: \\"style8.css\\";
	}
}

@supports (display: flex) {
	@media screen and (min-width: 400px) {
		.class {
			content: \\"style8.css\\";
		}
	}
}

@layer framework {
	.class {
		content: \\"style8.css\\";
	}
}

@layer default {
	.class {
		content: \\"style8.css\\";
	}
}

@layer base {
	.class {
		content: \\"style8.css\\";
	}
}

@layer default {
	@supports (display: flex) {
		.class {
			content: \\"style8.css\\";
		}
	}
}

@layer default {
	@supports (display: flex) {
		@media screen and (min-width: 400px) {
			.class {
				content: \\"style8.css\\";
			}
		}
	}
}

@layer {
	a {
		color: red;
	}
}

@media unknown(default) unknown(display: flex) unknown {
	.class {
		content: \\"style9.css\\";
	}
}

@media unknown(default) {
	.class {
		content: \\"style9.css\\";
	}
}

.style11 {
	color: red;
}

.style12 {
	color: red;
}

.style10 {
	color: red;
}

@media screen and (min-width: 400px) {
	@media screen and (max-width: 500px) {
		@media screen and (orientation: portrait) {
			.class {
				deep-deep-nested: 1;
			}
		}
	}
}

@media screen and (min-width: 400px) {
	@media screen and (max-width: 500px) {
		.class {
			deep-nested: 1;
		}
	}
}

@media screen and (min-width: 400px) {
	.class {
		nested: 1;
	}
}

@supports (display: flex) {
	@supports (display: grid) {
		@supports (display: table) {
			.class {
				deep-deep-nested: 1;
			}
		}
	}
}

@supports (display: flex) {
	@supports (display: grid) {
		.class {
			deep-nested: 1;
		}
	}
}

@supports (display: flex) {
	.class {
		nested: 1;
	}
}

@layer foo {
	@layer bar {
		@layer baz {
			.class {
				deep-deep-nested: 1;
			}
		}
	}
}

@layer foo {
	@layer bar {
		.class {
			deep-nested: 1;
		}
	}
}

@layer foo {
	.class {
		nested: 1;
	}
}

@layer foo {
	@supports (display: flex) {
		@media screen and (min-width: 400px) {
			@layer bar {
				@supports (display: grid) {
					@media screen and (min-width: 500px) {
						@layer baz {
							@supports (display: table) {
								@media screen and (min-width: 600px) {
									.class {
										deep-deep-nested: 1;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

@layer foo {
	@supports (display: flex) {
		@media screen and (min-width: 400px) {
			@layer bar {
				@supports (display: grid) {
					@media screen and (min-width: 500px) {
						.class {
							deep-nested: 1;
						}
					}
				}
			}
		}
	}
}

@layer foo {
	@supports (display: flex) {
		@media screen and (min-width: 400px) {
			.class {
				nested: 1;
			}
		}
	}
}

@media screen and (min-width: 400px) {
	@supports (display: flex) {
		@layer bar {
			.class {
				deep-deep-nested: 1;
			}
		}
	}
}

@media screen and (min-width: 400px) {
	@supports (display: flex) {
		.class {
			deep-nested: 1;
		}
	}
}

@media screen and (min-width: 400px) {
	.class {
		nested: 1;
	}
}

@layer {
	@layer {
		@layer {
			.class {
				deep-deep-nested: 1;
			}
		}
	}
}

@layer {
	@layer {
		.class {
			deep-nested: 1;
		}
	}
}

@layer {
	@layer base {
		@layer baz {
			.class {
				deep-deep-nested: 1;
			}
		}
	}
}

@layer {
	@layer base {
		.class {
			deep-nested: 1;
		}
	}
}

@layer {
	.class {
		deep-nested: 1;
	}
}

@media screen and (orientation: portrait) {
	.class {
		deep-deep-nested: 1;
	}
}

@media screen and (orientation: portrait) {
	@supports (display: flex) {
		.class {
			content: \\"style8.css\\";
		}
	}
}

@media screen and (orientation: portrait) {
	.class {
		duplicate-nested: true;
	}
}

@supports (display: flex) {
	@media screen and (orientation: portrait) {
		@layer {
			@layer {
				.class {
					deep-deep-nested: 1;
				}
			}
		}
	}
}

@supports (display: flex) {
	@media screen and (orientation: portrait) {
		@layer {
			.class {
				deep-nested: 1;
			}
		}
	}
}

@supports (display: flex) {
	@media screen and (orientation: portrait) {
		@layer base {
			@layer baz {
				.class {
					deep-deep-nested: 1;
				}
			}
		}
	}
}

@supports (display: flex) {
	@media screen and (orientation: portrait) {
		@layer base {
			.class {
				deep-nested: 1;
			}
		}
	}
}

@supports (display: flex) {
	@media screen and (orientation: portrait) {
		.class {
			deep-nested: 1;
		}
	}
}

@layer super.foo {
	@supports (display: flex) {
		@media screen and (min-width: 400px) {
			@layer bar {
				@supports (display: grid) {
					@media screen and (min-width: 500px) {
						@layer baz {
							@supports (display: table) {
								@media screen and (min-width: 600px) {
									.class {
										deep-deep-nested: 1;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

@layer super.foo {
	@supports (display: flex) {
		@media screen and (min-width: 400px) {
			@layer bar {
				@supports (display: grid) {
					@media screen and (min-width: 500px) {
						.class {
							deep-nested: 1;
						}
					}
				}
			}
		}
	}
}

@layer super.foo {
	@supports (display: flex) {
		@media screen and (min-width: 400px) {
			.class {
				nested: 1;
			}
		}
	}
}

/* Has the same URL */
/*@import url();
@import url('');
@import url(\\"\\");
@import '';
@import \\"\\";
@import \\"   \\";
@import \\"\\\\
\\";
@import url();
@import url('');
@import url(\\"\\");*/
/*@import url(https://test.cases/path/../../../../configCases/css/css-import/external.css) screen and (orientation:landscape);
@import url(https://test.cases/path/../../../../configCases/css/css-import/external.css) screen and (orientation:landscape);*/
/*@import \\"//example.com/style.css\\";*/
/*@import url(~package/test.css);*/
/*@import ;*/
/*@import foo-bar;*/
/*@import-normalize;*/
/*@import url('http://') :root {}*/
/*@import url('query.css?foo=1&bar=1');*/
/*@import url('other-query.css?foo=1&bar=1#hash');*/
/*@import url('other-query.css?foo=1&bar=1#hash') screen and (orientation:landscape);*/
/*@import url('https://fonts.googleapis.com/css?family=Roboto');*/
/*@import url('https://fonts.googleapis.com/css?family=Noto+Sans+TC');*/
/*@import url('https://fonts.googleapis.com/css?family=Noto+Sans+TC|Roboto');*/

/*@import nourl(test.css);
@import '\\\\
\\\\
\\\\
';
@import url('!!../../helpers/string-loader.js?esModule=false!~package/tilde.css');*/
/*@import url('   https://fonts.googleapis.com/css?family=Roboto   ');*/
/*@import url('!!../../helpers/string-loader.js?esModule=false!');*/
/*@import url('   !!../../helpers/string-loader.js?esModule=false!~package/tilde.css   ');*/
/*@import \\"http://example.com/style.css\\" supports(display: flex) screen and (min-width: 400px);*/
/* anonymous */
/* All unknown parse as media for compatibility */
body {
	background: red;
}

head{--webpack-main:https\\\\:\\\\/\\\\/test\\\\.cases\\\\/path\\\\/\\\\.\\\\.\\\\/\\\\.\\\\.\\\\/\\\\.\\\\.\\\\/\\\\.\\\\.\\\\/configCases\\\\/css\\\\/css-import\\\\/external\\\\.css,https\\\\:\\\\/\\\\/test\\\\.cases\\\\/path\\\\/\\\\.\\\\.\\\\/\\\\.\\\\.\\\\/\\\\.\\\\.\\\\/\\\\.\\\\.\\\\/configCases\\\\/css\\\\/css-import\\\\/external1\\\\.css,https\\\\:\\\\/\\\\/test\\\\.cases\\\\/path\\\\/\\\\.\\\\.\\\\/\\\\.\\\\.\\\\/\\\\.\\\\.\\\\/\\\\.\\\\.\\\\/configCases\\\\/css\\\\/css-import\\\\/external2\\\\.css,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=1,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=2,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=3,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=4,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=5,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=6,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=7,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=8,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=9,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=10,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=11,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=12,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=13,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=14,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=15,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=16,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=17,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=18,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=19,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=20,\\\\.\\\\/print\\\\.css\\\\?foo\\\\=21,\\\\.\\\\/imported\\\\.css\\\\?2fc7,\\\\.\\\\/imported\\\\.css\\\\?8e23,\\\\.\\\\/imported\\\\.css\\\\?daf4,\\\\.\\\\/imported\\\\.css\\\\?7a8d,\\\\.\\\\/style2\\\\.css\\\\?foo\\\\=1,\\\\.\\\\/style2\\\\.css\\\\?foo\\\\=2,\\\\.\\\\/style2\\\\.css\\\\?foo\\\\=3,\\\\.\\\\/style2\\\\.css\\\\?foo\\\\=4,\\\\.\\\\/style2\\\\.css\\\\?foo\\\\=5,\\\\.\\\\/style2\\\\.css\\\\?foo\\\\=6,\\\\.\\\\/style2\\\\.css\\\\?foo\\\\=7,\\\\.\\\\/style2\\\\.css\\\\?foo\\\\=8,\\\\.\\\\/style2\\\\.css\\\\?foo\\\\=9,\\\\.\\\\/style2\\\\.css\\\\?3989,\\\\.\\\\/style2\\\\.css\\\\?1933,\\\\.\\\\/style2\\\\.css\\\\?6611,\\\\.\\\\/style3\\\\.css\\\\?bar\\\\=1,\\\\.\\\\/style3\\\\.css\\\\?bar\\\\=2,\\\\.\\\\/style3\\\\.css\\\\?bar\\\\=3,\\\\.\\\\/style3\\\\.css\\\\?\\\\=bar4,\\\\.\\\\/styl\\\\'le7\\\\.css,\\\\.\\\\/styl\\\\'le7\\\\.css\\\\?foo\\\\=1,\\\\.\\\\/test\\\\ test\\\\.css,\\\\.\\\\/test\\\\ test\\\\.css\\\\?foo\\\\=1,\\\\.\\\\/test\\\\ test\\\\.css\\\\?foo\\\\=2,\\\\.\\\\/test\\\\ test\\\\.css\\\\?foo\\\\=3,\\\\.\\\\/test\\\\ test\\\\.css\\\\?foo\\\\=4,\\\\.\\\\/test\\\\ test\\\\.css\\\\?foo\\\\=5,\\\\.\\\\/test\\\\.css,\\\\.\\\\/test\\\\.css\\\\?foo\\\\=1,\\\\.\\\\/test\\\\.css\\\\?foo\\\\=2,\\\\.\\\\/test\\\\.css\\\\?foo\\\\=3,\\\\.\\\\/test\\\\ test\\\\.css\\\\?foo\\\\=6,\\\\.\\\\/test\\\\ test\\\\.css\\\\?foo\\\\=7,\\\\.\\\\/test\\\\ test\\\\.css\\\\?foo\\\\=8,\\\\.\\\\/test\\\\ test\\\\.css\\\\?foo\\\\=9,\\\\.\\\\/test\\\\ test\\\\.css\\\\?fpp\\\\=10,\\\\.\\\\/test\\\\ test\\\\.css\\\\?foo\\\\=11,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=bazz,\\\\.\\\\/style4\\\\.css\\\\?foo\\\\=bar,\\\\.\\\\/style4\\\\.css\\\\?foo\\\\=bar\\\\#hash,\\\\.\\\\/style4\\\\.css\\\\?\\\\#hash,\\\\.\\\\/style4\\\\.css\\\\?foo\\\\=1,\\\\.\\\\/style4\\\\.css\\\\?foo\\\\=2,\\\\.\\\\/style4\\\\.css\\\\?foo\\\\=3,\\\\.\\\\/style4\\\\.css\\\\?foo\\\\=4,\\\\.\\\\/style4\\\\.css\\\\?foo\\\\=5,data\\\\:text\\\\/css\\\\;charset\\\\=utf-8\\\\,a\\\\%20\\\\%7B\\\\%0D\\\\%0A\\\\%20\\\\%20color\\\\%3A\\\\%20red\\\\%3B\\\\%0D\\\\%0A\\\\%7D,data\\\\:text\\\\/css\\\\;charset\\\\=utf-8\\\\,a\\\\%20\\\\%7B\\\\%0D\\\\%0A\\\\%20\\\\%20color\\\\%3A\\\\%20blue\\\\%3B\\\\%0D\\\\%0A\\\\%7D,\\\\.\\\\/style5\\\\.css\\\\?foo\\\\=1,\\\\.\\\\/style5\\\\.css\\\\?foo\\\\=2,\\\\.\\\\/style5\\\\.css\\\\?foo\\\\=3,\\\\.\\\\/style5\\\\.css\\\\?foo\\\\=4,\\\\.\\\\/style5\\\\.css\\\\?foo\\\\=5,\\\\.\\\\/style5\\\\.css\\\\?foo\\\\=6,\\\\.\\\\/style5\\\\.css\\\\?foo\\\\=7,\\\\.\\\\/style5\\\\.css\\\\?foo\\\\=8,\\\\.\\\\/layer\\\\.css\\\\?foo\\\\=1,\\\\.\\\\/layer\\\\.css\\\\?foo\\\\=2,\\\\.\\\\/layer\\\\.css\\\\?foo\\\\=3\\\\?14ba,\\\\.\\\\/layer\\\\.css\\\\?foo\\\\=3\\\\?0e0d,\\\\.\\\\/layer\\\\.css\\\\?foo\\\\=4,\\\\.\\\\/layer\\\\.css\\\\?foo\\\\=5,\\\\.\\\\/layer\\\\.css\\\\?foo\\\\=6,\\\\.\\\\/layer\\\\.css\\\\?foo\\\\=7,\\\\.\\\\/style6\\\\.css,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=1,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=2,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=3,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=4,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=5,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=6,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=7,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=8,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=9,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=10,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=11,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=12,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=13,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=14,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=15,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=16,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=17,\\\\.\\\\/style6\\\\.css\\\\?foo\\\\=18,\\\\.\\\\/style8\\\\.css\\\\?5018,\\\\.\\\\/style8\\\\.css\\\\?204b,\\\\.\\\\/style8\\\\.css\\\\?63b0,\\\\.\\\\/style8\\\\.css\\\\?edb8,\\\\.\\\\/style8\\\\.css\\\\?6154,\\\\.\\\\/style8\\\\.css\\\\?8c51,\\\\.\\\\/style8\\\\.css\\\\?ced0,\\\\.\\\\/style8\\\\.css\\\\?d3b8,\\\\.\\\\/style8\\\\.css\\\\?3557,\\\\.\\\\/style8\\\\.css\\\\?ae6e,\\\\.\\\\/style8\\\\.css\\\\?d078,\\\\.\\\\/style8\\\\.css\\\\?ae8b,\\\\.\\\\/style2\\\\.css\\\\?ee8c,\\\\.\\\\/style9\\\\.css\\\\?5f26,\\\\.\\\\/style9\\\\.css\\\\?6536,\\\\.\\\\/style11\\\\.css,\\\\.\\\\/style12\\\\.css,\\\\.\\\\/style10\\\\.css,\\\\.\\\\/media-deep-deep-nested\\\\.css\\\\?1b5b,\\\\.\\\\/media-deep-nested\\\\.css,\\\\.\\\\/media-nested\\\\.css,\\\\.\\\\/supports-deep-deep-nested\\\\.css,\\\\.\\\\/supports-deep-nested\\\\.css,\\\\.\\\\/supports-nested\\\\.css,\\\\.\\\\/layer-deep-deep-nested\\\\.css\\\\?2bf1,\\\\.\\\\/layer-deep-nested\\\\.css\\\\?3469,\\\\.\\\\/layer-nested\\\\.css,\\\\.\\\\/all-deep-deep-nested\\\\.css\\\\?a7dd,\\\\.\\\\/all-deep-nested\\\\.css\\\\?5612,\\\\.\\\\/all-nested\\\\.css\\\\?a3fd,\\\\.\\\\/mixed-deep-deep-nested\\\\.css,\\\\.\\\\/mixed-deep-nested\\\\.css,\\\\.\\\\/mixed-nested\\\\.css,\\\\.\\\\/anonymous-deep-deep-nested\\\\.css\\\\?8f95,\\\\.\\\\/anonymous-deep-nested\\\\.css\\\\?40b5,\\\\.\\\\/layer-deep-deep-nested\\\\.css\\\\?e681,\\\\.\\\\/layer-deep-nested\\\\.css\\\\?dc2a,\\\\.\\\\/anonymous-nested\\\\.css\\\\?8aa8,\\\\.\\\\/media-deep-deep-nested\\\\.css\\\\?3aba,\\\\.\\\\/style8\\\\.css\\\\?83bd,\\\\.\\\\/duplicate-nested\\\\.css,\\\\.\\\\/anonymous-deep-deep-nested\\\\.css\\\\?384f,\\\\.\\\\/anonymous-deep-nested\\\\.css\\\\?8c49,\\\\.\\\\/layer-deep-deep-nested\\\\.css\\\\?17f5,\\\\.\\\\/layer-deep-nested\\\\.css\\\\?c345,\\\\.\\\\/anonymous-nested\\\\.css\\\\?d028,\\\\.\\\\/all-deep-deep-nested\\\\.css\\\\?220a,\\\\.\\\\/all-deep-nested\\\\.css\\\\?7c65,\\\\.\\\\/all-nested\\\\.css\\\\?5ae5,\\\\.\\\\/style\\\\.css;}",
]
`;

exports[`ConfigTestCases css pure-css exported tests should compile 1`] = `
Array [
  ".class {
	color: red;
}

.local1,
.local2 :global .global,
.local3 {
	color: green;
}

:global .global :local .local4 {
	color: yellow;
}

.local5:global(.global).local6 {
	color: blue;
}

.local7 div:not(.disabled, .mButtonDisabled, .tipOnly) {
    pointer-events: initial !important;
}

.local8 :is(div.parent1.child1.vertical-tiny,
    div.parent1.child1.vertical-small,
    div.otherDiv.horizontal-tiny,
    div.otherDiv.horizontal-small div.description) {
  max-height: 0;
  margin: 0;
  overflow: hidden;
}

.local9 :matches(div.parent1.child1.vertical-tiny,
    div.parent1.child1.vertical-small,
    div.otherDiv.horizontal-tiny,
    div.otherDiv.horizontal-small div.description) {
  max-height: 0;
  margin: 0;
  overflow: hidden;
}

.local10 :where(div.parent1.child1.vertical-tiny,
    div.parent1.child1.vertical-small,
    div.otherDiv.horizontal-tiny,
    div.otherDiv.horizontal-small div.description) {
  max-height: 0;
  margin: 0;
  overflow: hidden;
}

.local11 div:has(.disabled, .mButtonDisabled, .tipOnly) {
    pointer-events: initial !important;
}

.local12 div:current(p, span) {
	background-color: yellow;
}

.local13 div:past(p, span) {
	display: none;
}

.local14 div:future(p, span) {
	background-color: yellow;
}

.local15 div:-moz-any(ol, ul, menu, dir) {
	list-style-type: square;
}

.local16 li:-webkit-any(:first-child, :last-child) {
	background-color: aquamarine;
}

.local9 :matches(div.parent1.child1.vertical-tiny,
    div.parent1.child1.vertical-small,
    div.otherDiv.horizontal-tiny,
    div.otherDiv.horizontal-small div.description) {
	max-height: 0;
	margin: 0;
	overflow: hidden;
}

:global(:global(:local(.nested1)).nested2).nested3 {
	color: pink;
}

#ident {
	color: purple;
}

@keyframes localkeyframes {
	0% {
		left: var(--pos1x);
		top: var(--pos1y);
		color: var(--theme-color1);
	}
	100% {
		left: var(--pos2x);
		top: var(--pos2y);
		color: var(--theme-color2);
	}
}

@keyframes localkeyframes2 {
	0% {
		left: 0;
	}
	100% {
		left: 100px;
	}
}

.animation {
	animation-name: localkeyframes;
	animation: 3s ease-in 1s 2 reverse both paused localkeyframes, localkeyframes2;
	--pos1x: 0px;
	--pos1y: 0px;
	--pos2x: 10px;
	--pos2y: 20px;
}

/* .composed {
	composes: local1;
	composes: local2;
} */

.vars {
	color: var(--local-color);
	--local-color: red;
}

.globalVars :global {
	color: var(--global-color);
	--global-color: red;
}

@media (min-width: 1600px) {
	.wideScreenClass {
		color: var(--local-color);
		--local-color: green;
	}
}

@media screen and (max-width: 600px) {
	.narrowScreenClass {
		color: var(--local-color);
		--local-color: purple;
	}
}

@supports (display: grid) {
	.displayGridInSupports {
		display: grid;
	}
}

@supports not (display: grid) {
  .floatRightInNegativeSupports {
    float: right;
  }
}

@supports (display: flex) {
  @media screen and (min-width: 900px) {
    .displayFlexInMediaInSupports {
      display: flex;
    }
  }
}

@media screen and (min-width: 900px) {
	@supports (display: flex) {
    .displayFlexInSupportsInMedia {
      display: flex;
    }
  }
}

@MEDIA screen and (min-width: 900px) {
	@SUPPORTS (display: flex) {
		.displayFlexInSupportsInMediaUpperCase {
			display: flex;
		}
	}
}

.animationUpperCase {
	ANIMATION-NAME: localkeyframesUPPERCASE;
	ANIMATION: 3s ease-in 1s 2 reverse both paused localkeyframesUPPERCASE, localkeyframes2UPPPERCASE;
	--pos1x: 0px;
	--pos1y: 0px;
	--pos2x: 10px;
	--pos2y: 20px;
}

@KEYFRAMES localkeyframesUPPERCASE {
	0% {
		left: VAR(--pos1x);
		top: VAR(--pos1y);
		color: VAR(--theme-color1);
	}
	100% {
		left: VAR(--pos2x);
		top: VAR(--pos2y);
		color: VAR(--theme-color2);
	}
}

@KEYframes localkeyframes2UPPPERCASE {
	0% {
		left: 0;
	}
	100% {
		left: 100px;
	}
}

:GLOBAL .globalUpperCase :LOCAL .localUpperCase {
	color: yellow;
}

.VARS {
	color: VAR(--LOCAL-COLOR);
	--LOCAL-COLOR: red;
}

.globalVarsUpperCase :GLOBAL {
	COLOR: VAR(--GLOBAR-COLOR);
	--GLOBAR-COLOR: red;
}

@supports (top: env(safe-area-inset-top, 0)) {
	.inSupportScope {
		color: red;
	}
}

.a {
	animation: 3s animationName;
	-webkit-animation: 3s animationName;
}

.b {
	animation: animationName 3s;
	-webkit-animation: animationName 3s;
}

.c {
	animation-name: animationName;
	-webkit-animation-name: animationName;
}

.d {
	--animation-name: animationName;
}

@keyframes animationName {
	0% {
		background: white;
	}
	100% {
		background: red;
	}
}

@-webkit-keyframes animationName {
	0% {
		background: white;
	}
	100% {
		background: red;
	}
}

@-moz-keyframes mozAnimationName {
	0% {
		background: white;
	}
	100% {
		background: red;
	}
}

@counter-style thumbs {
	system: cyclic;
	symbols: \\"\\\\1F44D\\";
	suffix: \\" \\";
}

@font-feature-values Font One {
	@styleset {
		nice-style: 12;
	}
}

/* At-rule for \\"nice-style\\" in Font Two */
@font-feature-values Font Two {
	@styleset {
		nice-style: 4;
	}
}

@property --my-color {
	syntax: \\"<color>\\";
	inherits: false;
	initial-value: #c0ffee;
}

.class {
	color: var(--my-color);
}

@layer utilities {
	.padding-sm {
		padding: 0.5rem;
	}

	.padding-lg {
		padding: 0.8rem;
	}
}

.class {
	color: red;

	.nested-pure {
		color: red;
	}

	@media screen and (min-width: 200px) {
		color: blue;

		.nested-media {
			color: blue;
		}
	}

	@supports (display: flex) {
		display: flex;

		.nested-supports {
			display: flex;
		}
	}

	@layer foo {
		background: red;

		.nested-layer {
			background: red;
		}
	}

	@container foo {
		background: red;

		.nested-layer {
			background: red;
		}
	}
}

.not-selector-inside {
	color: #fff;
	opacity: 0.12;
	padding: .5px;
	unknown: :local(.test);
	unknown1: :local .test;
	unknown2: :global .test;
	unknown3: :global .test;
	unknown4: .foo, .bar, #bar;
}

@unknown :local .local :global .global {
	color: red;
}

@unknown :local(.local) :global(.global) {
	color: red;
}

.nested-var {
	.again {
		color: var(--local-color);
	}
}

.nested-with-local-pseudo {
	color: red;

	:local .local-nested {
		color: red;
	}

	:global .global-nested {
		color: red;
	}

	:local(.local-nested) {
		color: red;
	}

	:global(.global-nested) {
		color: red;
	}

	:local .local-nested, :global .global-nested-next {
		color: red;
	}

	:local(.local-nested), :global(.global-nested-next) {
		color: red;
	}

	:global .foo, .bar {
		color: red;
	}
}

#id-foo {
	color: red;

	#id-bar {
		color: red;
	}
}

.nested-parens {
	.local9 div:has(.vertical-tiny, .vertical-small) {
		max-height: 0;
		margin: 0;
		overflow: hidden;
	}
}

:global .global-foo {
	.nested-global {
		color: red;
	}

	:local .local-in-global {
		color: blue;
	}
}

@unknown .class {
	color: red;

	.class {
		color: red;
	}
}

:global .class :local .in-local-global-scope,
:global .class :local .in-local-global-scope,
:local .class-local-scope :global .in-local-global-scope {
	color: red;
}

@container (width > 400px) {
	.class-in-container {
		font-size: 1.5em;
	}
}

@container summary (min-width: 400px) {
	@container (width > 400px) {
		.deep-class-in-container {
			font-size: 1.5em;
		}
	}
}

:scope {
	color: red;
}

.placeholder-gray-700:-ms-input-placeholder {
	--placeholder-opacity: 1;
	color: #4a5568;
	color: rgba(74, 85, 104, var(--placeholder-opacity));
}
.placeholder-gray-700::-ms-input-placeholder {
	--placeholder-opacity: 1;
	color: #4a5568;
	color: rgba(74, 85, 104, var(--placeholder-opacity));
}
.placeholder-gray-700::placeholder {
	--placeholder-opacity: 1;
	color: #4a5568;
	color: rgba(74, 85, 104, var(--placeholder-opacity));
}

:root {
	--test: dark;
}

@media screen and (prefers-color-scheme: var(--test)) {
	.baz {
		color: white;
	}
}

@keyframes slidein {
	from {
		margin-left: 100%;
		width: 300%;
	}

	to {
		margin-left: 0%;
		width: 100%;
	}
}

.class {
	animation:
		foo var(--animation-name) 3s,
		var(--animation-name) 3s,
		3s linear 1s infinite running slidein,
		3s linear env(foo, var(--baz)) infinite running slidein;
}

:root {
	--baz: 10px;
}

.class {
	bar: env(foo, var(--baz));
}

:global      .global-foo, :local        .bar {
	:local      .local-in-global       {
		color: blue;
	}

	@media screen {
		:global .my-global-class-again,
		:local .my-global-class-again {
			color: red;
		}
	}
}

.class {
	color: red;
	background: var(--color);
}

@keyframes test {
	0% {
		color: red;
	}
	100% {
		color: blue;
	}
}

:local(.class) {
	color: red;
}

:local .class {
	color: green;
}

:global(.class) {
	color: blue;
}

:global .class {
	color: white;
}

:export {
	foo: bar;
}

.class {
	animation: test 1s, test;
}

head{--webpack-main:\\\\.\\\\.\\\\/css-modules\\\\/style\\\\.module\\\\.css,\\\\.\\\\/style\\\\.css;}",
]
`;
